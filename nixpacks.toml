# nixpacks.toml

# Use an environment variable to specify the Python version for Nixpacks
[variables]
NIXPACKS_PYTHON_VERSION = "3.12" # Or "3.11" if preferred

# --- Phases ---

# 1. Setup Phase: Install Python and core packages using Nix
[phases.setup]
# List Nix packages. NIXPACKS_PYTHON_VERSION determines the base Python version.
# We list the specific Python packages needed, matching your requirements.txt.
# Nix will manage these packages declaratively.
nixPkgs = [
    # Base Python installation (picked by NIXPACKS_PYTHON_VERSION)
    # Core Python packages usually come with the base install
    # Specific libraries from requirements.txt, translated to Nix package names
    "python312",
    "python312Packages.flask",
    "python312Packages.flask_cors",
    "python312Packages.requests",
    "python312Packages.numpy",
    "python312Packages.pandas",
    "python312Packages.scikitlearn", 
    "python312Packages.xgboost",
    "python312Packages.joblib",
    "python312Packages.gunicorn"
    # Add any other specific packages from requirements.txt if they have Nix equivalents
]

# 2. Install Phase: Skip traditional pip install
# Because we are using Nix packages, the dependencies are already installed
# by the setup phase. We don't need (and shouldn't use) pip here.
[phases.install]
# cmds = [] # Intentionally left empty

# 3. Build Phase (Optional)
# If you had specific build steps (e.g., compiling assets), they would go here.
# For a standard Flask app, this is often not needed.
# [phases.build]
# cmds = []

# 4. Start Phase: Define the command to run your application
[start]
# Important: 
# 1. The $PORT variable is provided by Railway.
# 2. Nixpacks should set up the environment so 'python' and 'gunicorn' are available.
# 3. We point Gunicorn directly to the WSGI app object.
# Ensure your directory structure is correct relative to the repo root.
# If your repo structure is repo_root/backend/api/app.py, 
# and Railway deploys from repo_root, the path is 'backend.api.app:app'.
# If Railway is configured with Root Directory 'backend/api', 
# then the path would be relative to that, e.g., 'app:app'.
# Let's use the full dotted path from the repo root, which is generally safer.
cmd = "gunicorn --bind 0.0.0.0:$PORT --workers 1 --timeout 120 backend.api.app:app"